{
    "manifest": {
        "translationVersion": 1742564063920,
        "pluginVersion": "1.4.0"
    },
    "description": {
        "original": "Allows users setup custom regex rules to automatically format notes.",
        "translation": "允许用户设置自定义正则表达式规则以自动格式化笔记。"
    },
    "dict": {
        "Notice(\"Failed to write to index file: \" + r)": "通知(\"无法写入索引文件: \" + r)",
        "Notice(\"Failed to write the ruleset file: \" + r)": "通知(\"无法写入规则集文件: \" + r)",
        "Notice(ruleset + \" not found!\")": "通知(ruleset + \" 未找到!\")",
        "Notice(\"No active Markdown file!\")": "通知(\"没有活动的Markdown文件!\")",
        "Notice(\"Executed ruleset '\" + ruleset + \"' which contains \" + count + \" regex replacements!\")": "通知(\"执行了规则集 '\" + ruleset + \"'，其中包含 \" + count + \" 个正则表达式替换!\")",
        "Notice(\"Failed to create the ruleset! Please check if the file already exist.\")": "通知(\"无法创建规则集！请检查文件是否已存在。\")",
        " log(message, ...optionalParams)": "log(message, ...optionalParams)",
        ".log(\"[regex-pipeline] \" + message)": ".log(\"[正则表达式管道] \" + message)",
        ".log('loading')": ".log('加载中')",
        ".log('Simple Callback')": ".log('简单回调')",
        ".log(\"Rulesets: \" + this.pathToRulesets)": ".log(\"规则集: \" + this.pathToRulesets)",
        ".log(\"Index: \" + this.pathToRulesets + this.indexFile)": ".log(\"索引: \" + this.pathToRulesets + this.indexFile)",
        ".log('unloading')": ".log('卸载中')",
        ".log(this.rules)": ".log(this.rules)",
        ".log(`setting up ${expectedCommands} commands...`)": ".log(`正在设置 ${expectedCommands} 个命令...`)",
        ".log(`pusing ${r} command...`)": ".log(`正在推送 ${r} 命令...`)",
        ".log(this.quickCommands)": ".log(this.quickCommands)",
        ".log(\"createRuleset: \" + name)": ".log(\"创建规则集: \" + name)",
        ".log(\"file existed: \" + path)": ".log(\"文件已存在: \" + path)",
        ".log(pos.top)": ".log(pos.top)",
        ".log(\"\\n\" + ruleMatches[1] + \"\\n↓↓↓↓↓\\n\" + ruleMatches[3])": ".log(\"\\n\" + ruleMatches[1] + \"\\n↓↓↓↓↓\\n\" + ruleMatches[3])",
        "name: 'Apply Ruleset'": "name: '应用规则集'",
        ".setButtonText(\"RELOAD\")": ".setButtonText(\"重新加载\")",
        ".setButtonText(\"Apply\")": ".setButtonText(\"应用\")",
        ".setButtonText(\"+\")": ".setButtonText(\"+\")",
        ".setButtonText(\"Save\")": ".setButtonText(\"保存\")",
        ".setName(\"Quick Rules\")": ".setName(\"快速规则\")",
        ".setName(\"Quick Rule Commands\")": ".setName(\"快速规则命令\")",
        ".setName(\"Save Rules In Vault\")": ".setName(\"在保险库中保存规则\")",
        ".setDesc(\"The first N rulesets in your index file will be available in right click menu and as commands.\")": ".setDesc(\"索引文件中的前N个规则集将在右键菜单中作为命令可用。\")",
        ".setDesc(\"The first N rulesets in your index file will be available as Obsidian commands. If decreasing, the existing commands will not be removed until next reload (You can also manually re-enabled the plugin).\")": ".setDesc(\"索引文件中的前N个规则集将作为Obsidian命令可用。如果减少，则现有命令将在下次重新加载之前不会被移除（您也可以手动重新启用插件）。\")",
        ".setDesc(\"Reads rulesets from \\\".obsidian/regex-rulesets\\\" when off, \\\"./regex-ruleset\\\" when on (useful if you are user of ObsidianSync). \")": ".setDesc(\"关闭时从\\\".obsidian/regex-rulesets\\\"读取规则集，开启时从\\\"./regex-ruleset\\\"读取（如果您是ObsidianSync的用户，这很有用）。\")"
    }
}
